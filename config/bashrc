
#! ========================================================================== !#
#!
#!                       ██████╗  █████╗ ███████╗██╗  ██╗
#!                       ██╔══██╗██╔══██╗██╔════╝██║  ██║
#!                       ██████╔╝███████║███████╗███████║
#!                       ██╔══██╗██╔══██║╚════██║██╔══██║
#!                       ██████╔╝██║  ██║███████║██║  ██║
#!                       ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝
#!
#!                            - Made by Druxorey -
#!                         https://github.com/druxorey
#!
#! ========================================================================== !#

#* ================================= startup ================================ *#

function roundseconds() {
    echo "scale=3; $1/1" | bc
}

function bash_getstarttime() {
    date +%s.%N > "/dev/shm/${USER}.bashtime.${1}"
}

function bash_getstoptime() {
    local endtime=$(date +%s.%N)
    local starttime=$(cat /dev/shm/${USER}.bashtime.${1})
    local elapsed=$(echo "$endtime - $starttime" | bc)
    printf "%.3f\n" $(roundseconds $elapsed)
}

ROOTPID=$BASHPID
bash_getstarttime $ROOTPID

[[ $- != *i* ]] && return
PS0='$(bash_getstarttime $ROOTPID)' 
PS1='[\u@\h \W]\$ $(bash_getstoptime $ROOTPID)ms > '
eval "$(zoxide init bash)"
eval "$(thefuck --alias)"

#* =============================== path export ============================== *#

export PATH=$PATH:~/.config/bin/
export GIT_EDITOR=nvim
export HISTFILE="${XDG_STATE_HOME}"/bash/history

#* ================================= aliases ================================ *#

# directory navigation
alias ls='ls --group-directories-first'
alias la='ls -a --group-directories-first'
alias ll='ls -alh --group-directories-first'
alias labc='ls -la'
alias l.='ls -a | grep -E "^\."'
alias ..='cd ..'
alias ...='cd ../..'

# shortcuts
alias convert='magick'
alias fk='fuck'
alias cp='cp -i'
alias rm='rm -i'
alias cpv='rsync -avh --info=progress2'
alias th='trash'
alias thl='trash-list'
alias thr='trash-restore'
alias matrix='cmatrix -C blue'
alias grep='grep --color=auto'
alias peaclock='peaclock --config ~/.config/peaclock'

# pacman and yay
alias sysupdate='sudo pacman -Syu ; yay -Sua --noconfirm'
alias unlock='sudo rm /var/lib/pacman/db.lck'

# git
alias gstatus='git status'
alias gadd='git add'
alias grestore='git restore --staged'
alias gcommit='git commit'
alias glog='git log --oneline -n 10'
alias gcheckout='git checkout'
alias gbranch='git branch'
alias gmerge='git merge'
alias gpull='git pull'
alias gpush='git push'

# macros
alias hs='cat ~/.config/zsh/.histfile | fzf'
alias dotfiles='cd ~/Workspace/dotfiles/'
alias dotfiles-code='code ~/Workspace/dotfiles/'
alias setkeys='setxkbmap us -variant intl'
alias reload='clear && source ~/.bashrc'
alias yt-audio='yt-dlp -x --audio-format mp3'
alias yt-1080='yt-dlp -f "bestvideo[height<=1080][ext=mp4]+bestaudio[ext=m4a]"'
alias yt-720='yt-dlp -f "bestvideo[height<=720][ext=mp4]+bestaudio[ext=m4a]"'
alias yt-480='yt-dlp -f "bestvideo[height<=480][ext=mp4]+bestaudio[ext=m4a]"'
alias vencord='sh -c "$(curl -sS https://raw.githubusercontent.com/Vendicated/VencordInstaller/main/install.sh)"'

# python
alias py='python3'
alias rm-pychache='sudo rm -r __pycache__'
alias venv-activate='source .venv/bin/activate'
alias venv-requirements='pip freeze > requirements.txt'
alias venv-create='virtualenv .venv'
alias venv-desactivate='deactivate'

# system
alias lock='dm-tool lock'
alias logout='bspc quit'
alias shutdown='shutdown now'
alias monitor-chome='xrandr --output eDP-1 --primary --mode 1920x1080 --rotate normal --output HDMI-1 --mode 1600x900 --rotate normal --right-of eDP-1'
alias monitor-dhome='xrandr --output HDMI-1 --off'

#* ================================ functions =============================== *#

function rsudo() {
    if [[ $# == 0 ]]; then
        sudo $(history -p '!!')
    else
        sudo '$@'
    fi
}


function compress() {

    [[ "$2" =~ ^[0-9]+$ ]] && set -- "$1" "" "$2"

    local date=$(date +%d-%m-%Y_%H-%M-%S)
    local compressionLevel='${3:-0}'
    local outputFile='${2:-${compressionLevel}_${date}.${1#*.}}'

    case $compressionLevel in
        0) compression=20 ;;
        1) compression=25 ;;
        2) compression=30 ;;
        3) compression=35 ;;
        *) echo 'Wrong compression level.' ; return ;;
    esac

    ffmpeg -i "$1" -vcodec libx264 -crf $compression '$outputFile'
}


function ex() {
    if [ -f "$1" ] ; then
        case $1 in
            *.tar.bz2)  xjf $1   ;;
            *.tar.gz)   tar xzf $1   ;;
            *.bz2)      bunzip2 $1   ;;
            *.rar)      unrar x $1   ;;
            *.gz)       gunzip $1    ;;
            *.tar)      tar xf $1    ;;
            *.tbz2)     tar xjf $1   ;;
            *.tgz)      tar xzf $1   ;;
            *.zip)      unzip $1     ;;
            *.Z)        uncompress $1;;
            *.7z)       7z x $1      ;;
            *.deb)      ar x $1      ;;
            *.tar.xz)   tar xf $1    ;;
            *.tar.zst)  unzstd $1    ;;
            *) echo '"$1" cannot be extracted via ex()' ;;
        esac
    else
        echo '"$1" is not a valid file'
    fi
}


function open() {
    if [ -f "$1" ] ; then
        case $1 in
            *.mp4)      mpv $1     ;;
            *.mkv)      mpv $1     ;;
            *.mp3)      mpv $1     ;;
            *.avi)      mpv $1     ;;
            *.flac)     mpv $1     ;;
            *.png)      sxiv $1    ;;
            *.webp)     sxiv $1    ;;
            *.jpeg)     sxiv $1    ;;
            *.jpg)      sxiv $1    ;;
            *.pdf)      zathura $1 ;;
            *) echo '"$1" cannot be open via open()\n Use: [mpv, sxiv or zathura]' ;;
        esac
    else
        echo '"$1" is not a valid file'
    fi
}
